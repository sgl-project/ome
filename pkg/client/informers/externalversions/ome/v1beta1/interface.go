// Code generated by informer-gen. DO NOT EDIT.

package v1beta1

import (
	internalinterfaces "github.com/sgl-project/sgl-ome/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// BaseModels returns a BaseModelInformer.
	BaseModels() BaseModelInformer
	// BenchmarkJobs returns a BenchmarkJobInformer.
	BenchmarkJobs() BenchmarkJobInformer
	// ClusterBaseModels returns a ClusterBaseModelInformer.
	ClusterBaseModels() ClusterBaseModelInformer
	// ClusterServingRuntimes returns a ClusterServingRuntimeInformer.
	ClusterServingRuntimes() ClusterServingRuntimeInformer
	// FineTunedWeights returns a FineTunedWeightInformer.
	FineTunedWeights() FineTunedWeightInformer
	// InferenceServices returns a InferenceServiceInformer.
	InferenceServices() InferenceServiceInformer
	// ServingRuntimes returns a ServingRuntimeInformer.
	ServingRuntimes() ServingRuntimeInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// BaseModels returns a BaseModelInformer.
func (v *version) BaseModels() BaseModelInformer {
	return &baseModelInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BenchmarkJobs returns a BenchmarkJobInformer.
func (v *version) BenchmarkJobs() BenchmarkJobInformer {
	return &benchmarkJobInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ClusterBaseModels returns a ClusterBaseModelInformer.
func (v *version) ClusterBaseModels() ClusterBaseModelInformer {
	return &clusterBaseModelInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ClusterServingRuntimes returns a ClusterServingRuntimeInformer.
func (v *version) ClusterServingRuntimes() ClusterServingRuntimeInformer {
	return &clusterServingRuntimeInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// FineTunedWeights returns a FineTunedWeightInformer.
func (v *version) FineTunedWeights() FineTunedWeightInformer {
	return &fineTunedWeightInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// InferenceServices returns a InferenceServiceInformer.
func (v *version) InferenceServices() InferenceServiceInformer {
	return &inferenceServiceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServingRuntimes returns a ServingRuntimeInformer.
func (v *version) ServingRuntimes() ServingRuntimeInformer {
	return &servingRuntimeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
