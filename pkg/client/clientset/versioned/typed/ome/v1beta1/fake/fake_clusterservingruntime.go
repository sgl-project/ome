// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/sgl-project/ome/pkg/apis/ome/v1beta1"
	omev1beta1 "github.com/sgl-project/ome/pkg/client/clientset/versioned/typed/ome/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterServingRuntimes implements ClusterServingRuntimeInterface
type fakeClusterServingRuntimes struct {
	*gentype.FakeClientWithList[*v1beta1.ClusterServingRuntime, *v1beta1.ClusterServingRuntimeList]
	Fake *FakeOmeV1beta1
}

func newFakeClusterServingRuntimes(fake *FakeOmeV1beta1) omev1beta1.ClusterServingRuntimeInterface {
	return &fakeClusterServingRuntimes{
		gentype.NewFakeClientWithList[*v1beta1.ClusterServingRuntime, *v1beta1.ClusterServingRuntimeList](
			fake.Fake,
			"",
			v1beta1.SchemeGroupVersion.WithResource("clusterservingruntimes"),
			v1beta1.SchemeGroupVersion.WithKind("ClusterServingRuntime"),
			func() *v1beta1.ClusterServingRuntime { return &v1beta1.ClusterServingRuntime{} },
			func() *v1beta1.ClusterServingRuntimeList { return &v1beta1.ClusterServingRuntimeList{} },
			func(dst, src *v1beta1.ClusterServingRuntimeList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.ClusterServingRuntimeList) []*v1beta1.ClusterServingRuntime {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.ClusterServingRuntimeList, items []*v1beta1.ClusterServingRuntime) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
