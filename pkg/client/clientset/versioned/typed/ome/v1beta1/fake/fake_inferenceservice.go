// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/sgl-project/ome/pkg/apis/ome/v1beta1"
	omev1beta1 "github.com/sgl-project/ome/pkg/client/clientset/versioned/typed/ome/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeInferenceServices implements InferenceServiceInterface
type fakeInferenceServices struct {
	*gentype.FakeClientWithList[*v1beta1.InferenceService, *v1beta1.InferenceServiceList]
	Fake *FakeOmeV1beta1
}

func newFakeInferenceServices(fake *FakeOmeV1beta1, namespace string) omev1beta1.InferenceServiceInterface {
	return &fakeInferenceServices{
		gentype.NewFakeClientWithList[*v1beta1.InferenceService, *v1beta1.InferenceServiceList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("inferenceservices"),
			v1beta1.SchemeGroupVersion.WithKind("InferenceService"),
			func() *v1beta1.InferenceService { return &v1beta1.InferenceService{} },
			func() *v1beta1.InferenceServiceList { return &v1beta1.InferenceServiceList{} },
			func(dst, src *v1beta1.InferenceServiceList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.InferenceServiceList) []*v1beta1.InferenceService {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.InferenceServiceList, items []*v1beta1.InferenceService) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
