// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/sgl-project/ome/pkg/apis/ome/v1beta1"
	omev1beta1 "github.com/sgl-project/ome/pkg/client/clientset/versioned/typed/ome/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeBaseModels implements BaseModelInterface
type fakeBaseModels struct {
	*gentype.FakeClientWithList[*v1beta1.BaseModel, *v1beta1.BaseModelList]
	Fake *FakeOmeV1beta1
}

func newFakeBaseModels(fake *FakeOmeV1beta1, namespace string) omev1beta1.BaseModelInterface {
	return &fakeBaseModels{
		gentype.NewFakeClientWithList[*v1beta1.BaseModel, *v1beta1.BaseModelList](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("basemodels"),
			v1beta1.SchemeGroupVersion.WithKind("BaseModel"),
			func() *v1beta1.BaseModel { return &v1beta1.BaseModel{} },
			func() *v1beta1.BaseModelList { return &v1beta1.BaseModelList{} },
			func(dst, src *v1beta1.BaseModelList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.BaseModelList) []*v1beta1.BaseModel { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.BaseModelList, items []*v1beta1.BaseModel) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
