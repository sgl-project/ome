// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1beta1 "github.com/sgl-project/sgl-ome/pkg/apis/ome/v1beta1"
	scheme "github.com/sgl-project/sgl-ome/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BenchmarkJobsGetter has a method to return a BenchmarkJobInterface.
// A group's client should implement this interface.
type BenchmarkJobsGetter interface {
	BenchmarkJobs(namespace string) BenchmarkJobInterface
}

// BenchmarkJobInterface has methods to work with BenchmarkJob resources.
type BenchmarkJobInterface interface {
	Create(ctx context.Context, benchmarkJob *v1beta1.BenchmarkJob, opts v1.CreateOptions) (*v1beta1.BenchmarkJob, error)
	Update(ctx context.Context, benchmarkJob *v1beta1.BenchmarkJob, opts v1.UpdateOptions) (*v1beta1.BenchmarkJob, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, benchmarkJob *v1beta1.BenchmarkJob, opts v1.UpdateOptions) (*v1beta1.BenchmarkJob, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.BenchmarkJob, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta1.BenchmarkJobList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1beta1.BenchmarkJob, err error)
	BenchmarkJobExpansion
}

// benchmarkJobs implements BenchmarkJobInterface
type benchmarkJobs struct {
	*gentype.ClientWithList[*v1beta1.BenchmarkJob, *v1beta1.BenchmarkJobList]
}

// newBenchmarkJobs returns a BenchmarkJobs
func newBenchmarkJobs(c *OmeV1beta1Client, namespace string) *benchmarkJobs {
	return &benchmarkJobs{
		gentype.NewClientWithList[*v1beta1.BenchmarkJob, *v1beta1.BenchmarkJobList](
			"benchmarkjobs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1beta1.BenchmarkJob { return &v1beta1.BenchmarkJob{} },
			func() *v1beta1.BenchmarkJobList { return &v1beta1.BenchmarkJobList{} }),
	}
}
