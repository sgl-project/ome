// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	context "context"

	omev1beta1 "github.com/sgl-project/ome/pkg/apis/ome/v1beta1"
	scheme "github.com/sgl-project/ome/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ServingRuntimesGetter has a method to return a ServingRuntimeInterface.
// A group's client should implement this interface.
type ServingRuntimesGetter interface {
	ServingRuntimes(namespace string) ServingRuntimeInterface
}

// ServingRuntimeInterface has methods to work with ServingRuntime resources.
type ServingRuntimeInterface interface {
	Create(ctx context.Context, servingRuntime *omev1beta1.ServingRuntime, opts v1.CreateOptions) (*omev1beta1.ServingRuntime, error)
	Update(ctx context.Context, servingRuntime *omev1beta1.ServingRuntime, opts v1.UpdateOptions) (*omev1beta1.ServingRuntime, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, servingRuntime *omev1beta1.ServingRuntime, opts v1.UpdateOptions) (*omev1beta1.ServingRuntime, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*omev1beta1.ServingRuntime, error)
	List(ctx context.Context, opts v1.ListOptions) (*omev1beta1.ServingRuntimeList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *omev1beta1.ServingRuntime, err error)
	ServingRuntimeExpansion
}

// servingRuntimes implements ServingRuntimeInterface
type servingRuntimes struct {
	*gentype.ClientWithList[*omev1beta1.ServingRuntime, *omev1beta1.ServingRuntimeList]
}

// newServingRuntimes returns a ServingRuntimes
func newServingRuntimes(c *OmeV1beta1Client, namespace string) *servingRuntimes {
	return &servingRuntimes{
		gentype.NewClientWithList[*omev1beta1.ServingRuntime, *omev1beta1.ServingRuntimeList](
			"servingruntimes",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *omev1beta1.ServingRuntime { return &omev1beta1.ServingRuntime{} },
			func() *omev1beta1.ServingRuntimeList { return &omev1beta1.ServingRuntimeList{} },
		),
	}
}
