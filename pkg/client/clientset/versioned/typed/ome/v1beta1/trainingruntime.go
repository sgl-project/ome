// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1beta1 "github.com/sgl-project/sgl-ome/pkg/apis/ome/v1beta1"
	scheme "github.com/sgl-project/sgl-ome/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// TrainingRuntimesGetter has a method to return a TrainingRuntimeInterface.
// A group's client should implement this interface.
type TrainingRuntimesGetter interface {
	TrainingRuntimes(namespace string) TrainingRuntimeInterface
}

// TrainingRuntimeInterface has methods to work with TrainingRuntime resources.
type TrainingRuntimeInterface interface {
	Create(ctx context.Context, trainingRuntime *v1beta1.TrainingRuntime, opts v1.CreateOptions) (*v1beta1.TrainingRuntime, error)
	Update(ctx context.Context, trainingRuntime *v1beta1.TrainingRuntime, opts v1.UpdateOptions) (*v1beta1.TrainingRuntime, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.TrainingRuntime, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta1.TrainingRuntimeList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1beta1.TrainingRuntime, err error)
	TrainingRuntimeExpansion
}

// trainingRuntimes implements TrainingRuntimeInterface
type trainingRuntimes struct {
	*gentype.ClientWithList[*v1beta1.TrainingRuntime, *v1beta1.TrainingRuntimeList]
}

// newTrainingRuntimes returns a TrainingRuntimes
func newTrainingRuntimes(c *OmeV1beta1Client, namespace string) *trainingRuntimes {
	return &trainingRuntimes{
		gentype.NewClientWithList[*v1beta1.TrainingRuntime, *v1beta1.TrainingRuntimeList](
			"trainingruntimes",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1beta1.TrainingRuntime { return &v1beta1.TrainingRuntime{} },
			func() *v1beta1.TrainingRuntimeList { return &v1beta1.TrainingRuntimeList{} }),
	}
}
