// Code generated by client-gen. DO NOT EDIT.

package v1beta1

import (
	"context"

	v1beta1 "github.com/sgl-project/sgl-ome/pkg/apis/ome/v1beta1"
	scheme "github.com/sgl-project/sgl-ome/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ClusterTrainingRuntimesGetter has a method to return a ClusterTrainingRuntimeInterface.
// A group's client should implement this interface.
type ClusterTrainingRuntimesGetter interface {
	ClusterTrainingRuntimes() ClusterTrainingRuntimeInterface
}

// ClusterTrainingRuntimeInterface has methods to work with ClusterTrainingRuntime resources.
type ClusterTrainingRuntimeInterface interface {
	Create(ctx context.Context, clusterTrainingRuntime *v1beta1.ClusterTrainingRuntime, opts v1.CreateOptions) (*v1beta1.ClusterTrainingRuntime, error)
	Update(ctx context.Context, clusterTrainingRuntime *v1beta1.ClusterTrainingRuntime, opts v1.UpdateOptions) (*v1beta1.ClusterTrainingRuntime, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1beta1.ClusterTrainingRuntime, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1beta1.ClusterTrainingRuntimeList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1beta1.ClusterTrainingRuntime, err error)
	ClusterTrainingRuntimeExpansion
}

// clusterTrainingRuntimes implements ClusterTrainingRuntimeInterface
type clusterTrainingRuntimes struct {
	*gentype.ClientWithList[*v1beta1.ClusterTrainingRuntime, *v1beta1.ClusterTrainingRuntimeList]
}

// newClusterTrainingRuntimes returns a ClusterTrainingRuntimes
func newClusterTrainingRuntimes(c *OmeV1beta1Client) *clusterTrainingRuntimes {
	return &clusterTrainingRuntimes{
		gentype.NewClientWithList[*v1beta1.ClusterTrainingRuntime, *v1beta1.ClusterTrainingRuntimeList](
			"clustertrainingruntimes",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1beta1.ClusterTrainingRuntime { return &v1beta1.ClusterTrainingRuntime{} },
			func() *v1beta1.ClusterTrainingRuntimeList { return &v1beta1.ClusterTrainingRuntimeList{} }),
	}
}
