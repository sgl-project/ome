//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/sgl-project/ome/pkg/constants"
	appsv1 "k8s.io/api/apps/v1"
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
	"knative.dev/pkg/apis"
	duckv1 "knative.dev/pkg/apis/duck/v1"
	servingv1 "knative.dev/serving/pkg/apis/serving/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCapabilities) DeepCopyInto(out *AcceleratorCapabilities) {
	*out = *in
	if in.MemoryGB != nil {
		in, out := &in.MemoryGB, &out.MemoryGB
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.ClockSpeedMHz != nil {
		in, out := &in.ClockSpeedMHz, &out.ClockSpeedMHz
		*out = new(int32)
		**out = **in
	}
	if in.MemoryBandwidthGBps != nil {
		in, out := &in.MemoryBandwidthGBps, &out.MemoryBandwidthGBps
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = new(AcceleratorPerformance)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCapabilities.
func (in *AcceleratorCapabilities) DeepCopy() *AcceleratorCapabilities {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCapabilities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorClass) DeepCopyInto(out *AcceleratorClass) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorClass.
func (in *AcceleratorClass) DeepCopy() *AcceleratorClass {
	if in == nil {
		return nil
	}
	out := new(AcceleratorClass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AcceleratorClass) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorClassList) DeepCopyInto(out *AcceleratorClassList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AcceleratorClass, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorClassList.
func (in *AcceleratorClassList) DeepCopy() *AcceleratorClassList {
	if in == nil {
		return nil
	}
	out := new(AcceleratorClassList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AcceleratorClassList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorClassSpec) DeepCopyInto(out *AcceleratorClassSpec) {
	*out = *in
	in.Discovery.DeepCopyInto(&out.Discovery)
	in.Capabilities.DeepCopyInto(&out.Capabilities)
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]AcceleratorResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Integration != nil {
		in, out := &in.Integration, &out.Integration
		*out = new(AcceleratorIntegration)
		**out = **in
	}
	if in.Cost != nil {
		in, out := &in.Cost, &out.Cost
		*out = new(AcceleratorCost)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorClassSpec.
func (in *AcceleratorClassSpec) DeepCopy() *AcceleratorClassSpec {
	if in == nil {
		return nil
	}
	out := new(AcceleratorClassSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorClassStatus) DeepCopyInto(out *AcceleratorClassStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.LastUpdated.DeepCopyInto(&out.LastUpdated)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorClassStatus.
func (in *AcceleratorClassStatus) DeepCopy() *AcceleratorClassStatus {
	if in == nil {
		return nil
	}
	out := new(AcceleratorClassStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorConstraints) DeepCopyInto(out *AcceleratorConstraints) {
	*out = *in
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(int64)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(int64)
		**out = **in
	}
	if in.MinComputeCapability != nil {
		in, out := &in.MinComputeCapability, &out.MinComputeCapability
		*out = new(int64)
		**out = **in
	}
	if in.RequiredFeatures != nil {
		in, out := &in.RequiredFeatures, &out.RequiredFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludedClasses != nil {
		in, out := &in.ExcludedClasses, &out.ExcludedClasses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArchitectureFamilies != nil {
		in, out := &in.ArchitectureFamilies, &out.ArchitectureFamilies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorConstraints.
func (in *AcceleratorConstraints) DeepCopy() *AcceleratorConstraints {
	if in == nil {
		return nil
	}
	out := new(AcceleratorConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorCost) DeepCopyInto(out *AcceleratorCost) {
	*out = *in
	if in.PerHour != nil {
		in, out := &in.PerHour, &out.PerHour
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.PerMillionTokens != nil {
		in, out := &in.PerMillionTokens, &out.PerMillionTokens
		x := (*in).DeepCopy()
		*out = &x
	}
	if in.SpotPerHour != nil {
		in, out := &in.SpotPerHour, &out.SpotPerHour
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorCost.
func (in *AcceleratorCost) DeepCopy() *AcceleratorCost {
	if in == nil {
		return nil
	}
	out := new(AcceleratorCost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorDiscovery) DeepCopyInto(out *AcceleratorDiscovery) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.DeviceIDs != nil {
		in, out := &in.DeviceIDs, &out.DeviceIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorDiscovery.
func (in *AcceleratorDiscovery) DeepCopy() *AcceleratorDiscovery {
	if in == nil {
		return nil
	}
	out := new(AcceleratorDiscovery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorIntegration) DeepCopyInto(out *AcceleratorIntegration) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorIntegration.
func (in *AcceleratorIntegration) DeepCopy() *AcceleratorIntegration {
	if in == nil {
		return nil
	}
	out := new(AcceleratorIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorLatency) DeepCopyInto(out *AcceleratorLatency) {
	*out = *in
	if in.AverageMillis != nil {
		in, out := &in.AverageMillis, &out.AverageMillis
		*out = new(int64)
		**out = **in
	}
	if in.MaximumMillis != nil {
		in, out := &in.MaximumMillis, &out.MaximumMillis
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorLatency.
func (in *AcceleratorLatency) DeepCopy() *AcceleratorLatency {
	if in == nil {
		return nil
	}
	out := new(AcceleratorLatency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorModelConfig) DeepCopyInto(out *AcceleratorModelConfig) {
	*out = *in
	if in.MinMemoryPerBillionParams != nil {
		in, out := &in.MinMemoryPerBillionParams, &out.MinMemoryPerBillionParams
		*out = new(int64)
		**out = **in
	}
	if in.TensorParallelismOverride != nil {
		in, out := &in.TensorParallelismOverride, &out.TensorParallelismOverride
		*out = new(TensorParallelismConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RuntimeArgsOverride != nil {
		in, out := &in.RuntimeArgsOverride, &out.RuntimeArgsOverride
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnvironmentOverride != nil {
		in, out := &in.EnvironmentOverride, &out.EnvironmentOverride
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorModelConfig.
func (in *AcceleratorModelConfig) DeepCopy() *AcceleratorModelConfig {
	if in == nil {
		return nil
	}
	out := new(AcceleratorModelConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorPerformance) DeepCopyInto(out *AcceleratorPerformance) {
	*out = *in
	if in.Fp32Tflops != nil {
		in, out := &in.Fp32Tflops, &out.Fp32Tflops
		*out = new(int64)
		**out = **in
	}
	if in.Fp16Tflops != nil {
		in, out := &in.Fp16Tflops, &out.Fp16Tflops
		*out = new(int64)
		**out = **in
	}
	if in.Int8Tops != nil {
		in, out := &in.Int8Tops, &out.Int8Tops
		*out = new(int64)
		**out = **in
	}
	if in.Int4Tops != nil {
		in, out := &in.Int4Tops, &out.Int4Tops
		*out = new(int64)
		**out = **in
	}
	if in.Latency != nil {
		in, out := &in.Latency, &out.Latency
		*out = new(AcceleratorLatency)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorPerformance.
func (in *AcceleratorPerformance) DeepCopy() *AcceleratorPerformance {
	if in == nil {
		return nil
	}
	out := new(AcceleratorPerformance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorRequirements) DeepCopyInto(out *AcceleratorRequirements) {
	*out = *in
	if in.AcceleratorClasses != nil {
		in, out := &in.AcceleratorClasses, &out.AcceleratorClasses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MinMemory != nil {
		in, out := &in.MinMemory, &out.MinMemory
		*out = new(int64)
		**out = **in
	}
	if in.MinComputeCapability != nil {
		in, out := &in.MinComputeCapability, &out.MinComputeCapability
		*out = new(int64)
		**out = **in
	}
	if in.RequiredFeatures != nil {
		in, out := &in.RequiredFeatures, &out.RequiredFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PreferredPrecisions != nil {
		in, out := &in.PreferredPrecisions, &out.PreferredPrecisions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorRequirements.
func (in *AcceleratorRequirements) DeepCopy() *AcceleratorRequirements {
	if in == nil {
		return nil
	}
	out := new(AcceleratorRequirements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorResource) DeepCopyInto(out *AcceleratorResource) {
	*out = *in
	out.Quantity = in.Quantity.DeepCopy()
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorResource.
func (in *AcceleratorResource) DeepCopy() *AcceleratorResource {
	if in == nil {
		return nil
	}
	out := new(AcceleratorResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorSelection) DeepCopyInto(out *AcceleratorSelection) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceRequests != nil {
		in, out := &in.ResourceRequests, &out.ResourceRequests
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorSelection.
func (in *AcceleratorSelection) DeepCopy() *AcceleratorSelection {
	if in == nil {
		return nil
	}
	out := new(AcceleratorSelection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorSelector) DeepCopyInto(out *AcceleratorSelector) {
	*out = *in
	if in.AcceleratorClass != nil {
		in, out := &in.AcceleratorClass, &out.AcceleratorClass
		*out = new(string)
		**out = **in
	}
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(AcceleratorConstraints)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorSelector.
func (in *AcceleratorSelector) DeepCopy() *AcceleratorSelector {
	if in == nil {
		return nil
	}
	out := new(AcceleratorSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseModel) DeepCopyInto(out *BaseModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseModel.
func (in *BaseModel) DeepCopy() *BaseModel {
	if in == nil {
		return nil
	}
	out := new(BaseModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BaseModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseModelList) DeepCopyInto(out *BaseModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BaseModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseModelList.
func (in *BaseModelList) DeepCopy() *BaseModelList {
	if in == nil {
		return nil
	}
	out := new(BaseModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BaseModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseModelSpec) DeepCopyInto(out *BaseModelSpec) {
	*out = *in
	in.ModelFormat.DeepCopyInto(&out.ModelFormat)
	if in.ModelType != nil {
		in, out := &in.ModelType, &out.ModelType
		*out = new(string)
		**out = **in
	}
	if in.ModelFramework != nil {
		in, out := &in.ModelFramework, &out.ModelFramework
		*out = new(ModelFrameworkSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelArchitecture != nil {
		in, out := &in.ModelArchitecture, &out.ModelArchitecture
		*out = new(string)
		**out = **in
	}
	if in.Quantization != nil {
		in, out := &in.Quantization, &out.Quantization
		*out = new(ModelQuantization)
		**out = **in
	}
	if in.ModelParameterSize != nil {
		in, out := &in.ModelParameterSize, &out.ModelParameterSize
		*out = new(string)
		**out = **in
	}
	if in.ModelCapabilities != nil {
		in, out := &in.ModelCapabilities, &out.ModelCapabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.ModelConfiguration.DeepCopyInto(&out.ModelConfiguration)
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
	in.ModelExtensionSpec.DeepCopyInto(&out.ModelExtensionSpec)
	if in.ServingMode != nil {
		in, out := &in.ServingMode, &out.ServingMode
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxTokens != nil {
		in, out := &in.MaxTokens, &out.MaxTokens
		*out = new(int32)
		**out = **in
	}
	if in.AdditionalMetadata != nil {
		in, out := &in.AdditionalMetadata, &out.AdditionalMetadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseModelSpec.
func (in *BaseModelSpec) DeepCopy() *BaseModelSpec {
	if in == nil {
		return nil
	}
	out := new(BaseModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BenchmarkJob) DeepCopyInto(out *BenchmarkJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BenchmarkJob.
func (in *BenchmarkJob) DeepCopy() *BenchmarkJob {
	if in == nil {
		return nil
	}
	out := new(BenchmarkJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BenchmarkJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BenchmarkJobList) DeepCopyInto(out *BenchmarkJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BenchmarkJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BenchmarkJobList.
func (in *BenchmarkJobList) DeepCopy() *BenchmarkJobList {
	if in == nil {
		return nil
	}
	out := new(BenchmarkJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BenchmarkJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BenchmarkJobSpec) DeepCopyInto(out *BenchmarkJobSpec) {
	*out = *in
	if in.HuggingFaceSecretReference != nil {
		in, out := &in.HuggingFaceSecretReference, &out.HuggingFaceSecretReference
		*out = new(HuggingFaceSecretReference)
		**out = **in
	}
	in.Endpoint.DeepCopyInto(&out.Endpoint)
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(ServiceMetadata)
		**out = **in
	}
	if in.TrafficScenarios != nil {
		in, out := &in.TrafficScenarios, &out.TrafficScenarios
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NumConcurrency != nil {
		in, out := &in.NumConcurrency, &out.NumConcurrency
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.MaxTimePerIteration != nil {
		in, out := &in.MaxTimePerIteration, &out.MaxTimePerIteration
		*out = new(int)
		**out = **in
	}
	if in.MaxRequestsPerIteration != nil {
		in, out := &in.MaxRequestsPerIteration, &out.MaxRequestsPerIteration
		*out = new(int)
		**out = **in
	}
	if in.AdditionalRequestParams != nil {
		in, out := &in.AdditionalRequestParams, &out.AdditionalRequestParams
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputLocation != nil {
		in, out := &in.OutputLocation, &out.OutputLocation
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ResultFolderName != nil {
		in, out := &in.ResultFolderName, &out.ResultFolderName
		*out = new(string)
		**out = **in
	}
	if in.PodOverride != nil {
		in, out := &in.PodOverride, &out.PodOverride
		*out = new(PodOverride)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BenchmarkJobSpec.
func (in *BenchmarkJobSpec) DeepCopy() *BenchmarkJobSpec {
	if in == nil {
		return nil
	}
	out := new(BenchmarkJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BenchmarkJobStatus) DeepCopyInto(out *BenchmarkJobStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.LastReconcileTime != nil {
		in, out := &in.LastReconcileTime, &out.LastReconcileTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BenchmarkJobStatus.
func (in *BenchmarkJobStatus) DeepCopy() *BenchmarkJobStatus {
	if in == nil {
		return nil
	}
	out := new(BenchmarkJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBaseModel) DeepCopyInto(out *ClusterBaseModel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBaseModel.
func (in *ClusterBaseModel) DeepCopy() *ClusterBaseModel {
	if in == nil {
		return nil
	}
	out := new(ClusterBaseModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterBaseModel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBaseModelList) DeepCopyInto(out *ClusterBaseModelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterBaseModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBaseModelList.
func (in *ClusterBaseModelList) DeepCopy() *ClusterBaseModelList {
	if in == nil {
		return nil
	}
	out := new(ClusterBaseModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterBaseModelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterServingRuntime) DeepCopyInto(out *ClusterServingRuntime) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterServingRuntime.
func (in *ClusterServingRuntime) DeepCopy() *ClusterServingRuntime {
	if in == nil {
		return nil
	}
	out := new(ClusterServingRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterServingRuntime) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterServingRuntimeList) DeepCopyInto(out *ClusterServingRuntimeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterServingRuntime, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterServingRuntimeList.
func (in *ClusterServingRuntimeList) DeepCopy() *ClusterServingRuntimeList {
	if in == nil {
		return nil
	}
	out := new(ClusterServingRuntimeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterServingRuntimeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentExtensionSpec) DeepCopyInto(out *ComponentExtensionSpec) {
	*out = *in
	if in.MinReplicas != nil {
		in, out := &in.MinReplicas, &out.MinReplicas
		*out = new(int)
		**out = **in
	}
	if in.ScaleTarget != nil {
		in, out := &in.ScaleTarget, &out.ScaleTarget
		*out = new(int)
		**out = **in
	}
	if in.ScaleMetric != nil {
		in, out := &in.ScaleMetric, &out.ScaleMetric
		*out = new(ScaleMetric)
		**out = **in
	}
	if in.ContainerConcurrency != nil {
		in, out := &in.ContainerConcurrency, &out.ContainerConcurrency
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	if in.CanaryTrafficPercent != nil {
		in, out := &in.CanaryTrafficPercent, &out.CanaryTrafficPercent
		*out = new(int64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MinAvailable != nil {
		in, out := &in.MinAvailable, &out.MinAvailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.DeploymentStrategy != nil {
		in, out := &in.DeploymentStrategy, &out.DeploymentStrategy
		*out = new(appsv1.DeploymentStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.KedaConfig != nil {
		in, out := &in.KedaConfig, &out.KedaConfig
		*out = new(KedaConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentExtensionSpec.
func (in *ComponentExtensionSpec) DeepCopy() *ComponentExtensionSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentExtensionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentStatusSpec) DeepCopyInto(out *ComponentStatusSpec) {
	*out = *in
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]servingv1.TrafficTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.RestURL != nil {
		in, out := &in.RestURL, &out.RestURL
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.SelectedAccelerator != nil {
		in, out := &in.SelectedAccelerator, &out.SelectedAccelerator
		*out = new(AcceleratorSelection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentStatusSpec.
func (in *ComponentStatusSpec) DeepCopy() *ComponentStatusSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentStatusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecoderSpec) DeepCopyInto(out *DecoderSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	in.ComponentExtensionSpec.DeepCopyInto(&out.ComponentExtensionSpec)
	if in.Runner != nil {
		in, out := &in.Runner, &out.Runner
		*out = new(RunnerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Leader != nil {
		in, out := &in.Leader, &out.Leader
		*out = new(LeaderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorOverride != nil {
		in, out := &in.AcceleratorOverride, &out.AcceleratorOverride
		*out = new(AcceleratorSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecoderSpec.
func (in *DecoderSpec) DeepCopy() *DecoderSpec {
	if in == nil {
		return nil
	}
	out := new(DecoderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	if in.InferenceService != nil {
		in, out := &in.InferenceService, &out.InferenceService
		*out = new(InferenceServiceReference)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(Endpoint)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EngineSpec) DeepCopyInto(out *EngineSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	in.ComponentExtensionSpec.DeepCopyInto(&out.ComponentExtensionSpec)
	if in.Runner != nil {
		in, out := &in.Runner, &out.Runner
		*out = new(RunnerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Leader != nil {
		in, out := &in.Leader, &out.Leader
		*out = new(LeaderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorOverride != nil {
		in, out := &in.AcceleratorOverride, &out.AcceleratorOverride
		*out = new(AcceleratorSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EngineSpec.
func (in *EngineSpec) DeepCopy() *EngineSpec {
	if in == nil {
		return nil
	}
	out := new(EngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailureInfo) DeepCopyInto(out *FailureInfo) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailureInfo.
func (in *FailureInfo) DeepCopy() *FailureInfo {
	if in == nil {
		return nil
	}
	out := new(FailureInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FineTunedWeight) DeepCopyInto(out *FineTunedWeight) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FineTunedWeight.
func (in *FineTunedWeight) DeepCopy() *FineTunedWeight {
	if in == nil {
		return nil
	}
	out := new(FineTunedWeight)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FineTunedWeight) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FineTunedWeightList) DeepCopyInto(out *FineTunedWeightList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FineTunedWeight, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FineTunedWeightList.
func (in *FineTunedWeightList) DeepCopy() *FineTunedWeightList {
	if in == nil {
		return nil
	}
	out := new(FineTunedWeightList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FineTunedWeightList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FineTunedWeightSpec) DeepCopyInto(out *FineTunedWeightSpec) {
	*out = *in
	in.BaseModelRef.DeepCopyInto(&out.BaseModelRef)
	if in.ModelType != nil {
		in, out := &in.ModelType, &out.ModelType
		*out = new(string)
		**out = **in
	}
	in.HyperParameters.DeepCopyInto(&out.HyperParameters)
	in.ModelExtensionSpec.DeepCopyInto(&out.ModelExtensionSpec)
	in.Configuration.DeepCopyInto(&out.Configuration)
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
	in.TrainingJobRef.DeepCopyInto(&out.TrainingJobRef)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FineTunedWeightSpec.
func (in *FineTunedWeightSpec) DeepCopy() *FineTunedWeightSpec {
	if in == nil {
		return nil
	}
	out := new(FineTunedWeightSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HuggingFaceSecretReference) DeepCopyInto(out *HuggingFaceSecretReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HuggingFaceSecretReference.
func (in *HuggingFaceSecretReference) DeepCopy() *HuggingFaceSecretReference {
	if in == nil {
		return nil
	}
	out := new(HuggingFaceSecretReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceService) DeepCopyInto(out *InferenceService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceService.
func (in *InferenceService) DeepCopy() *InferenceService {
	if in == nil {
		return nil
	}
	out := new(InferenceService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InferenceService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceServiceList) DeepCopyInto(out *InferenceServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InferenceService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceServiceList.
func (in *InferenceServiceList) DeepCopy() *InferenceServiceList {
	if in == nil {
		return nil
	}
	out := new(InferenceServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InferenceServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceServiceReference) DeepCopyInto(out *InferenceServiceReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceServiceReference.
func (in *InferenceServiceReference) DeepCopy() *InferenceServiceReference {
	if in == nil {
		return nil
	}
	out := new(InferenceServiceReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceServiceSpec) DeepCopyInto(out *InferenceServiceSpec) {
	*out = *in
	in.Predictor.DeepCopyInto(&out.Predictor)
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(EngineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Decoder != nil {
		in, out := &in.Decoder, &out.Decoder
		*out = new(DecoderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelRef)
		(*in).DeepCopyInto(*out)
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(ServingRuntimeRef)
		(*in).DeepCopyInto(*out)
	}
	if in.Router != nil {
		in, out := &in.Router, &out.Router
		*out = new(RouterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.KedaConfig != nil {
		in, out := &in.KedaConfig, &out.KedaConfig
		*out = new(KedaConfig)
		**out = **in
	}
	if in.AcceleratorSelector != nil {
		in, out := &in.AcceleratorSelector, &out.AcceleratorSelector
		*out = new(AcceleratorSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceServiceSpec.
func (in *InferenceServiceSpec) DeepCopy() *InferenceServiceSpec {
	if in == nil {
		return nil
	}
	out := new(InferenceServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceServiceStatus) DeepCopyInto(out *InferenceServiceStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1.Addressable)
		(*in).DeepCopyInto(*out)
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(apis.URL)
		(*in).DeepCopyInto(*out)
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make(map[ComponentType]ComponentStatusSpec, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.ModelStatus.DeepCopyInto(&out.ModelStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceServiceStatus.
func (in *InferenceServiceStatus) DeepCopy() *InferenceServiceStatus {
	if in == nil {
		return nil
	}
	out := new(InferenceServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KedaConfig) DeepCopyInto(out *KedaConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KedaConfig.
func (in *KedaConfig) DeepCopy() *KedaConfig {
	if in == nil {
		return nil
	}
	out := new(KedaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LeaderSpec) DeepCopyInto(out *LeaderSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	if in.Runner != nil {
		in, out := &in.Runner, &out.Runner
		*out = new(RunnerSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LeaderSpec.
func (in *LeaderSpec) DeepCopy() *LeaderSpec {
	if in == nil {
		return nil
	}
	out := new(LeaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelCopies) DeepCopyInto(out *ModelCopies) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelCopies.
func (in *ModelCopies) DeepCopy() *ModelCopies {
	if in == nil {
		return nil
	}
	out := new(ModelCopies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelExtensionSpec) DeepCopyInto(out *ModelExtensionSpec) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelExtensionSpec.
func (in *ModelExtensionSpec) DeepCopy() *ModelExtensionSpec {
	if in == nil {
		return nil
	}
	out := new(ModelExtensionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelFormat) DeepCopyInto(out *ModelFormat) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(RuntimeSelectorOperator)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelFormat.
func (in *ModelFormat) DeepCopy() *ModelFormat {
	if in == nil {
		return nil
	}
	out := new(ModelFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelFrameworkSpec) DeepCopyInto(out *ModelFrameworkSpec) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(RuntimeSelectorOperator)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelFrameworkSpec.
func (in *ModelFrameworkSpec) DeepCopy() *ModelFrameworkSpec {
	if in == nil {
		return nil
	}
	out := new(ModelFrameworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelRef) DeepCopyInto(out *ModelRef) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.APIGroup != nil {
		in, out := &in.APIGroup, &out.APIGroup
		*out = new(string)
		**out = **in
	}
	if in.FineTunedWeights != nil {
		in, out := &in.FineTunedWeights, &out.FineTunedWeights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelRef.
func (in *ModelRef) DeepCopy() *ModelRef {
	if in == nil {
		return nil
	}
	out := new(ModelRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelRevisionStates) DeepCopyInto(out *ModelRevisionStates) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelRevisionStates.
func (in *ModelRevisionStates) DeepCopy() *ModelRevisionStates {
	if in == nil {
		return nil
	}
	out := new(ModelRevisionStates)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSizeRangeSpec) DeepCopyInto(out *ModelSizeRangeSpec) {
	*out = *in
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSizeRangeSpec.
func (in *ModelSizeRangeSpec) DeepCopy() *ModelSizeRangeSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSizeRangeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelSpec) DeepCopyInto(out *ModelSpec) {
	*out = *in
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = new(string)
		**out = **in
	}
	in.PredictorExtensionSpec.DeepCopyInto(&out.PredictorExtensionSpec)
	if in.BaseModel != nil {
		in, out := &in.BaseModel, &out.BaseModel
		*out = new(string)
		**out = **in
	}
	if in.FineTunedWeights != nil {
		in, out := &in.FineTunedWeights, &out.FineTunedWeights
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelSpec.
func (in *ModelSpec) DeepCopy() *ModelSpec {
	if in == nil {
		return nil
	}
	out := new(ModelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	if in.ModelRevisionStates != nil {
		in, out := &in.ModelRevisionStates, &out.ModelRevisionStates
		*out = new(ModelRevisionStates)
		**out = **in
	}
	if in.LastFailureInfo != nil {
		in, out := &in.LastFailureInfo, &out.LastFailureInfo
		*out = new(FailureInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelCopies != nil {
		in, out := &in.ModelCopies, &out.ModelCopies
		*out = new(ModelCopies)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatusSpec) DeepCopyInto(out *ModelStatusSpec) {
	*out = *in
	if in.LifeCycle != nil {
		in, out := &in.LifeCycle, &out.LifeCycle
		*out = new(string)
		**out = **in
	}
	if in.NodesReady != nil {
		in, out := &in.NodesReady, &out.NodesReady
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesFailed != nil {
		in, out := &in.NodesFailed, &out.NodesFailed
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatusSpec.
func (in *ModelStatusSpec) DeepCopy() *ModelStatusSpec {
	if in == nil {
		return nil
	}
	out := new(ModelStatusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodOverride) DeepCopyInto(out *PodOverride) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvFrom != nil {
		in, out := &in.EnvFrom, &out.EnvFrom
		*out = make([]v1.EnvFromSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodOverride.
func (in *PodOverride) DeepCopy() *PodOverride {
	if in == nil {
		return nil
	}
	out := new(PodOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSpec) DeepCopyInto(out *PodSpec) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EphemeralContainers != nil {
		in, out := &in.EphemeralContainers, &out.EphemeralContainers
		*out = make([]v1.EphemeralContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.AutomountServiceAccountToken != nil {
		in, out := &in.AutomountServiceAccountToken, &out.AutomountServiceAccountToken
		*out = new(bool)
		**out = **in
	}
	if in.ShareProcessNamespace != nil {
		in, out := &in.ShareProcessNamespace, &out.ShareProcessNamespace
		*out = new(bool)
		**out = **in
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]v1.HostAlias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.DNSConfig != nil {
		in, out := &in.DNSConfig, &out.DNSConfig
		*out = new(v1.PodDNSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]v1.PodReadinessGate, len(*in))
		copy(*out, *in)
	}
	if in.RuntimeClassName != nil {
		in, out := &in.RuntimeClassName, &out.RuntimeClassName
		*out = new(string)
		**out = **in
	}
	if in.EnableServiceLinks != nil {
		in, out := &in.EnableServiceLinks, &out.EnableServiceLinks
		*out = new(bool)
		**out = **in
	}
	if in.PreemptionPolicy != nil {
		in, out := &in.PreemptionPolicy, &out.PreemptionPolicy
		*out = new(v1.PreemptionPolicy)
		**out = **in
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = make(v1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]v1.TopologySpreadConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetHostnameAsFQDN != nil {
		in, out := &in.SetHostnameAsFQDN, &out.SetHostnameAsFQDN
		*out = new(bool)
		**out = **in
	}
	if in.OS != nil {
		in, out := &in.OS, &out.OS
		*out = new(v1.PodOS)
		**out = **in
	}
	if in.HostUsers != nil {
		in, out := &in.HostUsers, &out.HostUsers
		*out = new(bool)
		**out = **in
	}
	if in.SchedulingGates != nil {
		in, out := &in.SchedulingGates, &out.SchedulingGates
		*out = make([]v1.PodSchedulingGate, len(*in))
		copy(*out, *in)
	}
	if in.ResourceClaims != nil {
		in, out := &in.ResourceClaims, &out.ResourceClaims
		*out = make([]v1.PodResourceClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSpec.
func (in *PodSpec) DeepCopy() *PodSpec {
	if in == nil {
		return nil
	}
	out := new(PodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictorExtensionSpec) DeepCopyInto(out *PredictorExtensionSpec) {
	*out = *in
	if in.StorageUri != nil {
		in, out := &in.StorageUri, &out.StorageUri
		*out = new(string)
		**out = **in
	}
	if in.RuntimeVersion != nil {
		in, out := &in.RuntimeVersion, &out.RuntimeVersion
		*out = new(string)
		**out = **in
	}
	if in.ProtocolVersion != nil {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = new(constants.InferenceServiceProtocol)
		**out = **in
	}
	in.Container.DeepCopyInto(&out.Container)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictorExtensionSpec.
func (in *PredictorExtensionSpec) DeepCopy() *PredictorExtensionSpec {
	if in == nil {
		return nil
	}
	out := new(PredictorExtensionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PredictorSpec) DeepCopyInto(out *PredictorSpec) {
	*out = *in
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(ModelSpec)
		(*in).DeepCopyInto(*out)
	}
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	in.ComponentExtensionSpec.DeepCopyInto(&out.ComponentExtensionSpec)
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PredictorSpec.
func (in *PredictorSpec) DeepCopy() *PredictorSpec {
	if in == nil {
		return nil
	}
	out := new(PredictorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouterSpec) DeepCopyInto(out *RouterSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	in.ComponentExtensionSpec.DeepCopyInto(&out.ComponentExtensionSpec)
	if in.Runner != nil {
		in, out := &in.Runner, &out.Runner
		*out = new(RunnerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouterSpec.
func (in *RouterSpec) DeepCopy() *RouterSpec {
	if in == nil {
		return nil
	}
	out := new(RouterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunnerSpec) DeepCopyInto(out *RunnerSpec) {
	*out = *in
	in.Container.DeepCopyInto(&out.Container)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunnerSpec.
func (in *RunnerSpec) DeepCopy() *RunnerSpec {
	if in == nil {
		return nil
	}
	out := new(RunnerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceMetadata) DeepCopyInto(out *ServiceMetadata) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceMetadata.
func (in *ServiceMetadata) DeepCopy() *ServiceMetadata {
	if in == nil {
		return nil
	}
	out := new(ServiceMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntime) DeepCopyInto(out *ServingRuntime) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntime.
func (in *ServingRuntime) DeepCopy() *ServingRuntime {
	if in == nil {
		return nil
	}
	out := new(ServingRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServingRuntime) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntimeList) DeepCopyInto(out *ServingRuntimeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServingRuntime, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntimeList.
func (in *ServingRuntimeList) DeepCopy() *ServingRuntimeList {
	if in == nil {
		return nil
	}
	out := new(ServingRuntimeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServingRuntimeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntimePodSpec) DeepCopyInto(out *ServingRuntimePodSpec) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntimePodSpec.
func (in *ServingRuntimePodSpec) DeepCopy() *ServingRuntimePodSpec {
	if in == nil {
		return nil
	}
	out := new(ServingRuntimePodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntimeRef) DeepCopyInto(out *ServingRuntimeRef) {
	*out = *in
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.APIGroup != nil {
		in, out := &in.APIGroup, &out.APIGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntimeRef.
func (in *ServingRuntimeRef) DeepCopy() *ServingRuntimeRef {
	if in == nil {
		return nil
	}
	out := new(ServingRuntimeRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntimeSpec) DeepCopyInto(out *ServingRuntimeSpec) {
	*out = *in
	if in.SupportedModelFormats != nil {
		in, out := &in.SupportedModelFormats, &out.SupportedModelFormats
		*out = make([]SupportedModelFormat, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ModelSizeRange != nil {
		in, out := &in.ModelSizeRange, &out.ModelSizeRange
		*out = new(ModelSizeRangeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.RouterConfig != nil {
		in, out := &in.RouterConfig, &out.RouterConfig
		*out = new(RouterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.EngineConfig != nil {
		in, out := &in.EngineConfig, &out.EngineConfig
		*out = new(EngineSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DecoderConfig != nil {
		in, out := &in.DecoderConfig, &out.DecoderConfig
		*out = new(DecoderSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ProtocolVersions != nil {
		in, out := &in.ProtocolVersions, &out.ProtocolVersions
		*out = make([]constants.InferenceServiceProtocol, len(*in))
		copy(*out, *in)
	}
	in.ServingRuntimePodSpec.DeepCopyInto(&out.ServingRuntimePodSpec)
	if in.WorkerPodSpec != nil {
		in, out := &in.WorkerPodSpec, &out.WorkerPodSpec
		*out = new(WorkerPodSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorRequirements != nil {
		in, out := &in.AcceleratorRequirements, &out.AcceleratorRequirements
		*out = new(AcceleratorRequirements)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntimeSpec.
func (in *ServingRuntimeSpec) DeepCopy() *ServingRuntimeSpec {
	if in == nil {
		return nil
	}
	out := new(ServingRuntimeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServingRuntimeStatus) DeepCopyInto(out *ServingRuntimeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServingRuntimeStatus.
func (in *ServingRuntimeStatus) DeepCopy() *ServingRuntimeStatus {
	if in == nil {
		return nil
	}
	out := new(ServingRuntimeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSpec) DeepCopyInto(out *StorageSpec) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SchemaPath != nil {
		in, out := &in.SchemaPath, &out.SchemaPath
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.StorageKey != nil {
		in, out := &in.StorageKey, &out.StorageKey
		*out = new(string)
		**out = **in
	}
	if in.StorageUri != nil {
		in, out := &in.StorageUri, &out.StorageUri
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(v1.NodeAffinity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSpec.
func (in *StorageSpec) DeepCopy() *StorageSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportedModelFormat) DeepCopyInto(out *SupportedModelFormat) {
	*out = *in
	if in.ModelFormat != nil {
		in, out := &in.ModelFormat, &out.ModelFormat
		*out = new(ModelFormat)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelType != nil {
		in, out := &in.ModelType, &out.ModelType
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ModelFramework != nil {
		in, out := &in.ModelFramework, &out.ModelFramework
		*out = new(ModelFrameworkSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ModelArchitecture != nil {
		in, out := &in.ModelArchitecture, &out.ModelArchitecture
		*out = new(string)
		**out = **in
	}
	if in.Quantization != nil {
		in, out := &in.Quantization, &out.Quantization
		*out = new(ModelQuantization)
		**out = **in
	}
	if in.AutoSelect != nil {
		in, out := &in.AutoSelect, &out.AutoSelect
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.AcceleratorConfig != nil {
		in, out := &in.AcceleratorConfig, &out.AcceleratorConfig
		*out = make(map[string]*AcceleratorModelConfig, len(*in))
		for key, val := range *in {
			var outVal *AcceleratorModelConfig
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(AcceleratorModelConfig)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportedModelFormat.
func (in *SupportedModelFormat) DeepCopy() *SupportedModelFormat {
	if in == nil {
		return nil
	}
	out := new(SupportedModelFormat)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportedRuntime) DeepCopyInto(out *SupportedRuntime) {
	*out = *in
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportedRuntime.
func (in *SupportedRuntime) DeepCopy() *SupportedRuntime {
	if in == nil {
		return nil
	}
	out := new(SupportedRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TensorParallelismConfig) DeepCopyInto(out *TensorParallelismConfig) {
	*out = *in
	if in.TensorParallelSize != nil {
		in, out := &in.TensorParallelSize, &out.TensorParallelSize
		*out = new(int64)
		**out = **in
	}
	if in.PipelineParallelSize != nil {
		in, out := &in.PipelineParallelSize, &out.PipelineParallelSize
		*out = new(int64)
		**out = **in
	}
	if in.DataParallelSize != nil {
		in, out := &in.DataParallelSize, &out.DataParallelSize
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TensorParallelismConfig.
func (in *TensorParallelismConfig) DeepCopy() *TensorParallelismConfig {
	if in == nil {
		return nil
	}
	out := new(TensorParallelismConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPodSpec) DeepCopyInto(out *WorkerPodSpec) {
	*out = *in
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int)
		**out = **in
	}
	in.ServingRuntimePodSpec.DeepCopyInto(&out.ServingRuntimePodSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPodSpec.
func (in *WorkerPodSpec) DeepCopy() *WorkerPodSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerPodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerSpec) DeepCopyInto(out *WorkerSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int)
		**out = **in
	}
	if in.Runner != nil {
		in, out := &in.Runner, &out.Runner
		*out = new(RunnerSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerSpec.
func (in *WorkerSpec) DeepCopy() *WorkerSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerSpec)
	in.DeepCopyInto(out)
	return out
}
