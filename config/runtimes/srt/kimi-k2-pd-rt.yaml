apiVersion: ome.io/v1beta1
kind: ClusterServingRuntime
metadata:
  name: srt-kimi-k2-pd
spec:
  disabled: false
  modelSizeRange:
    min: 1T
    max: 1.5T
  supportedModelFormats:
    - modelFormat:
        name: safetensors
        version: "1.0.0"
      modelFramework:
        name: transformers
        version: "4.48.3"
      modelArchitecture: DeepseekV3ForCausalLM
      quantization: "fp8"
      autoSelect: true
      priority: 1
  protocolVersions:
    - openAI
  engineConfig:
    leader:
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: devinf
          hostPath:
            path: /dev/infiniband
        - name: sglang-recorder-dir
          emptyDir: {}
        - name: sglang-profiler-dir
          emptyDir: {}
      runner:
        name: ome-container
        image: docker.io/lmsysorg/sglang:dev
        env:
          - name: MC_TE_METRIC
            value: "true"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: GLOO_SOCKET_IFNAME
            value: eth0
          - name: SGLANG_EXPERT_DISTRIBUTION_RECORDER_DIR
            value: "/tmp/sglang-recorder"
          - name: SGLANG_TORCH_PROFILER_DIR
            value: "/tmp/sglang-profiler"
        command:
          - sh
          - -c
          - >
            python3 -m sglang.launch_server
            --port 8080
            --host 0.0.0.0
            --model-path ${MODEL_PATH}
            --disaggregation-ib-device mlx5_1
            --chunked-prefill-size 524288
            --max-prefill-tokens 32768
            --page-size 64
            --ep-dispatch-algorithm dynamic
            --eplb-algorithm deepseek
            --enable-dp-lm-head
            --watchdog-timeout 1000000
            --disable-cuda-graph
            --enable-two-batch-overlap
            --enable-dp-attention
            --disable-shared-experts-fusion
            --dp-size ${PARALLELISM_SIZE}
            --disable-radix-cache
            --enable-deepep-moe
            --deepep-mode normal
            --disaggregation-mode prefill
            --mem-fraction-static 0.849
            --context-length 2176
            --tp-size ${PARALLELISM_SIZE}
            --dist-init-addr $(LWS_LEADER_ADDRESS):5000
            --nnodes ${LWS_GROUP_SIZE}
            --node-rank ${LWS_WORKER_INDEX}
            --trust-remote-code
            --moe-dense-tp-size 1
            --decode-log-interval 1
            --max-running-requests 1024
            --max-total-tokens 131072
            --ep-num-redundant-experts ${PARALLELISM_SIZE}
            --enable-eplb
        resources:
          requests:
            nvidia.com/gpu: 8
          limits:
            nvidia.com/gpu: 8
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /dev/infiniband
            name: devinf
          - mountPath: /tmp/sglang-recorder
            name: sglang-recorder-dir
          - mountPath: /tmp/sglang-profiler
            name: sglang-profiler-dir
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - CAP_SYS_ADMIN
          privileged: true
    worker:
      size: 3
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: devinf
          hostPath:
            path: /dev/infiniband
        - name: sglang-recorder-dir
          emptyDir: {}
        - name: sglang-profiler-dir
          emptyDir: {}
      runner:
        name: ome-container
        image: docker.io/lmsysorg/sglang:dev
        env:
          - name: MC_TE_METRIC
            value: "true"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: GLOO_SOCKET_IFNAME
            value: eth0
          - name: SGLANG_EXPERT_DISTRIBUTION_RECORDER_DIR
            value: "/tmp/sglang-recorder"
          - name: SGLANG_TORCH_PROFILER_DIR
            value: "/tmp/sglang-profiler"
        command:
          - sh
          - -c
          - >
            python3 -m sglang.launch_server
            --model-path ${MODEL_PATH}
            --disaggregation-ib-device mlx5_1
            --chunked-prefill-size 524288
            --max-prefill-tokens 32768
            --page-size 64
            --ep-dispatch-algorithm dynamic
            --eplb-algorithm deepseek
            --enable-dp-lm-head
            --enable-dp-attention
            --dp-size ${PARALLELISM_SIZE}
            --disable-radix-cache
            --enable-deepep-moe
            --disable-cuda-graph
            --enable-two-batch-overlap
            --disable-shared-experts-fusion
            --deepep-mode normal
            --disaggregation-mode prefill
            --max-total-tokens 131072
            --watchdog-timeout 1000000
            --mem-fraction-static 0.849
            --context-length 2176
            --tp-size ${PARALLELISM_SIZE}
            --dist-init-addr $(LWS_LEADER_ADDRESS):5000
            --nnodes ${LWS_GROUP_SIZE}
            --node-rank ${LWS_WORKER_INDEX}
            --port 8080
            --trust-remote-code
            --moe-dense-tp-size 1
            --decode-log-interval 1
            --host 0.0.0.0
            --max-running-requests 1024
            --ep-num-redundant-experts ${PARALLELISM_SIZE}
            --enable-eplb
        resources:
          limits:
            nvidia.com/gpu: "8"
          requests:
            nvidia.com/gpu: "8"
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /dev/infiniband
            name: devinf
          - mountPath: /tmp/sglang-recorder
            name: sglang-recorder-dir
          - mountPath: /tmp/sglang-profiler
            name: sglang-profiler-dir
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - CAP_SYS_ADMIN
          privileged: true
  decoderConfig:
    leader:
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: devinf
          hostPath:
            path: /dev/infiniband
        - name: sglang-recorder-dir
          emptyDir: {}
        - name: sglang-profiler-dir
          emptyDir: {}
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      runner:
        name: ome-container
        image: docker.io/lmsysorg/sglang:dev
        env:
          - name: MC_TE_METRIC
            value: "true"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: SGLANG_NUM_RESERVED_DECODE_TOKENS
            value: "176"
          - name: SGLANG_DEEPEP_NUM_MAX_DISPATCH_TOKENS_PER_RANK
            value: "256"
          - name: GLOO_SOCKET_IFNAME
            value: eth0
          - name: SGLANG_EXPERT_DISTRIBUTION_RECORDER_DIR
            value: "/tmp/sglang-recorder"
          - name: SGLANG_TORCH_PROFILER_DIR
            value: "/tmp/sglang-profiler"
        command:
          - sh
          - -c
          - >
            python3 -m sglang.launch_server
            --port 8080
            --host 0.0.0.0
            --page-size 64
            --model-path ${MODEL_PATH}
            --enable-dp-attention
            --enable-dp-lm-head
            --dp-size ${PARALLELISM_SIZE}
            --disable-radix-cache
            --disable-shared-experts-fusion
            --enable-deepep-moe
            --deepep-mode low_latency
            --disaggregation-mode decode
            --enable-two-batch-overlap
            --watchdog-timeout 1000000
            --mem-fraction-static 0.849
            --context-length 2176
            --disaggregation-ib-device mlx5_1
            --cuda-graph-bs 256
            --max-running-requests 24576
            --tp-size ${PARALLELISM_SIZE}
            --dist-init-addr $(LWS_LEADER_ADDRESS):5000
            --nnodes ${LWS_GROUP_SIZE}
            --node-rank ${LWS_WORKER_INDEX}
            --decode-log-interval 1
            --trust-remote-code
            --moe-dense-tp-size 1
            --ep-num-redundant-experts ${PARALLELISM_SIZE}
            --enable-eplb
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /dev/infiniband
            name: devinf
          - mountPath: /tmp/sglang-recorder
            name: sglang-recorder-dir
          - mountPath: /tmp/sglang-profiler
            name: sglang-profiler-dir
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - CAP_SYS_ADMIN
          privileged: true
        resources:
          requests:
            nvidia.com/gpu: 8
          limits:
            nvidia.com/gpu: 8
    worker:
      size: 11
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: devinf
          hostPath:
            path: /dev/infiniband
        - name: sglang-recorder-dir
          emptyDir: {}
        - name: sglang-profiler-dir
          emptyDir: {}
      runner:
        name: ome-container
        image: docker.io/lmsysorg/sglang:dev
        env:
          - name: MC_TE_METRIC
            value: "true"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: SGLANG_NUM_RESERVED_DECODE_TOKENS
            value: "176"
          - name: SGLANG_DEEPEP_NUM_MAX_DISPATCH_TOKENS_PER_RANK
            value: "256"
          - name: GLOO_SOCKET_IFNAME
            value: eth0
          - name: SGLANG_EXPERT_DISTRIBUTION_RECORDER_DIR
            value: "/tmp/sglang-recorder"
          - name: SGLANG_TORCH_PROFILER_DIR
            value: "/tmp/sglang-profiler"
        command:
          - sh
          - -c
          - >
            python3 -m sglang.launch_server
            --model-path ${MODEL_PATH}
            --page-size 64
            --enable-dp-attention
            --enable-dp-lm-head
            --dp-size ${PARALLELISM_SIZE}
            --disable-radix-cache
            --disable-shared-experts-fusion
            --enable-deepep-moe
            --deepep-mode low_latency
            --watchdog-timeout 1000000
            --enable-two-batch-overlap
            --disaggregation-mode decode
            --mem-fraction-static 0.849
            --context-length 2176
            --disaggregation-ib-device mlx5_1
            --cuda-graph-bs 256
            --max-running-requests 24576
            --tp-size ${PARALLELISM_SIZE}
            --dist-init-addr $(LWS_LEADER_ADDRESS):5000
            --nnodes ${LWS_GROUP_SIZE}
            --node-rank ${LWS_WORKER_INDEX}
            --port 8080
            --decode-log-interval 1
            --host 0.0.0.0
            --trust-remote-code
            --moe-dense-tp-size 1
            --ep-num-redundant-experts ${PARALLELISM_SIZE}
            --enable-eplb
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /dev/infiniband
            name: devinf
          - mountPath: /tmp/sglang-recorder
            name: sglang-recorder-dir
          - mountPath: /tmp/sglang-profiler
            name: sglang-profiler-dir
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - CAP_SYS_ADMIN
          privileged: true
        resources:
          limits:
            nvidia.com/gpu: "8"
          requests:
            nvidia.com/gpu: "8"
  routerConfig:
    runner:
      name: router
      image: ghcr.io/moirai-internal/sgl-router:dev
      resources:
        limits:
          cpu: "10"
          memory: "20Gi"
      ports:
        - containerPort: 8080
          name: http
      command:
        - sh
        - -c
        - >
          python3 -m sglang_router.launch_router
          --host 0.0.0.0
          --port 8080
          --pd-disaggregation
          --policy random
          --service-discovery
          --service-discovery-namespace "${NAMESPACE}"
          --service-discovery-port 8080
          --prefill-selector component=engine leaderworkerset.sigs.k8s.io/worker-index=0 ome.io/inferenceservice=${INFERENCESERVICE_NAME}
          --decode-selector component=decoder leaderworkerset.sigs.k8s.io/worker-index=0 ome.io/inferenceservice=${INFERENCESERVICE_NAME}
          --max-payload-size 2147483648
          --worker-startup-timeout-secs 1200
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INFERENCESERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['ome.io/inferenceservice']
