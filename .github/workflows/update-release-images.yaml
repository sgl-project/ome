name: Update Release Images

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to update images to (e.g., v0.1.0)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Install yq
        uses: mikefarah/yq@v4

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            TAG="${{ inputs.tag }}"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Updating images to version: ${TAG}"

      - name: Update config patches
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          
          # Update manager deployment patch
          cat > config/default/manager_image_patch.yaml << EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ome-controller-manager
  namespace: ome
spec:
  template:
    spec:
      containers:
        - name: manager
          image: ghcr.io/moirai-internal/ome-manager:${TAG}
EOF
          
          # Update model agent daemonset patch
          cat > config/default/model_agent_image_patch.yaml << EOF
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ome-model-agent-daemonset
  namespace: ome
spec:
  template:
    spec:
      containers:
        - name: model-agent
          image: ghcr.io/moirai-internal/model-agent:${TAG}
EOF

      - name: Update Helm chart values
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          
          # Update the defaultVersion at the top
          yq eval -i '.ome.version = "'${TAG}'"' charts/ome-resources/values.yaml
          
          # Update specific component images
          yq eval -i '.ome.multinodeProber.tag = "'${TAG}'"' charts/ome-resources/values.yaml
          yq eval -i '.ome.controller.tag = "'${TAG}'"' charts/ome-resources/values.yaml
          yq eval -i '.ome.omeAgent.tag = "'${TAG}'"' charts/ome-resources/values.yaml
          yq eval -i '.modelAgent.image.tag = "'${TAG}'"' charts/ome-resources/values.yaml
          
          # Update the controller image to use the new namespace format
          yq eval -i '.ome.controller.image = "ghcr.io/moirai-internal/ome-manager"' charts/ome-resources/values.yaml
          
          echo "âœ… Updated Helm chart values"

      - name: Update Chart.yaml versions
        run: |
          VERSION="${{ steps.version.outputs.tag }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          
          # Update all Chart.yaml files
          for chart in charts/*/; do
            if [[ -f "${chart}Chart.yaml" ]]; then
              yq eval -i ".version = \"${VERSION}\"" "${chart}Chart.yaml"
              yq eval -i ".appVersion = \"${VERSION}\"" "${chart}Chart.yaml"
              echo "âœ… Updated ${chart}Chart.yaml"
            fi
          done

      - name: Validate changes
        run: |
          echo "ðŸ“‹ Changes made:"
          echo ""
          echo "Config patches:"
          ls -la config/default/*_image_patch.yaml || true
          echo ""
          echo "Helm values changes:"
          git diff charts/ome-resources/values.yaml || true
          echo ""
          echo "Chart.yaml changes:"
          git diff charts/*/Chart.yaml || true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            [Release] Update images to ${{ steps.version.outputs.tag }}
            
            - Update config patches for manager and model-agent
            - Update Helm chart default image tags
            - Update Chart.yaml versions
            
            Auto-generated by release workflow
          branch: update-images-${{ steps.version.outputs.tag }}
          delete-branch: true
          title: "[Release] Update images to ${{ steps.version.outputs.tag }}"
          body: |
            ## ðŸš€ Release Image Update
            
            This PR automatically updates all image references to version `${{ steps.version.outputs.tag }}`.
            
            ### Changes made:
            - âœ… Updated config patches for kustomize deployments
            - âœ… Updated Helm chart image tags in values.yaml
            - âœ… Updated Chart.yaml versions
            
            ### Components updated:
            - ome-manager
            - model-agent
            - multinode-prober
            - ome-agent
            
            Please review and merge this PR to ensure `make install` uses the latest release images.
            
            ---
            *This PR was automatically generated by the release workflow.*
          labels: |
            release
            automated
          assignees: ${{ github.actor }}