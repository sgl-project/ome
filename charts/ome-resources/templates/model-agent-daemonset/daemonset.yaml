apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ome-model-agent-daemonset
  namespace: {{ .Release.Namespace }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/component: "ome-model-agent-daemonset"
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "ome-model-agent-daemonset"
        logging-forward: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.modelAgent.health.port }}"
        prometheus.io/path: "/metrics"
    spec:
      priorityClassName: {{ .Values.modelAgent.priorityClassName }}
      serviceAccountName: {{ .Values.modelAgent.serviceAccountName }}
      affinity:
        {{- toYaml .Values.modelAgent.affinity | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.modelAgent.nodeSelector | nindent 8 }}
      {{- $imagePullSecrets := .Values.modelAgent.imagePullSecrets | default .Values.global.imagePullSecrets }}
      {{- if $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml $imagePullSecrets | nindent 8 }}
      {{- end }}
      volumes:
        - name: host-models
          hostPath:
            path: {{ .Values.modelAgent.hostPath }}
            type: DirectoryOrCreate
        {{- with .Values.modelAgent.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
      - name: model-agent
        image: {{ include "ome.imageWithHub" (dict "values" .Values "repository" .Values.modelAgent.image.repository "tag" .Values.modelAgent.image.tag) }}
        imagePullPolicy: {{ .Values.modelAgent.image.pullPolicy }}
        ports:
        - name: metrics
          containerPort: {{ .Values.modelAgent.health.port }}
          protocol: TCP
        args:
        - --models-root-dir
        - {{ .Values.modelAgent.hostPath }}
        - --num-download-worker
        - '2'
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: host-models
          readOnly: false
          mountPath: {{ .Values.modelAgent.hostPath }}
        {{- with .Values.modelAgent.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        startupProbe:
          httpGet:
            path: /livez
            port: {{ .Values.modelAgent.health.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /livez
            port: {{ .Values.modelAgent.health.port }}
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.modelAgent.health.port }}
          periodSeconds: 10
        {{- if .Values.modelAgent.resources }}
        resources:
          {{- toYaml .Values.modelAgent.resources | nindent 10 }}
        {{- end }}
      {{- with .Values.modelAgent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
