apiVersion: ome.io/v1beta1
kind: ClusterServingRuntime
metadata:
  name: gais-contentmoderate
spec:
  labels:
    logging-forward: enabled
    sidecar.istio.io/inject: 'true'
  annotations:
    prometheus.io/port: '8080'
    prometheus.io/scrape: 'true'
  tolerations:
    - effect: NoSchedule
      key: nvidia.com/gpu
      operator: Exists
  supportedModelFormats:
    - modelFormat:
        name: onnx
        version: "1"
      modelFramework:
        name: onnxruntime
        version: "1"
      autoSelect: true
      modelArchitecture: BertForSequenceClassification
  protocolVersions:
    - v2
  containers:
    - name: ome-container
      image: "{{ .Values.content_moderator.image.repository }}:{{ .Values.content_moderator.image.tag }}"
      command:
        - /bin/bash
        - '-lc'
        - --
      args:
        - |
          python3 -m content_moderator.app \
          --model-path=/mnt/data/models/olm/content_moderator/ \
          --port=8080
      ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      resources:
        requests:
          cpu: 16
          memory: 60Gi
      readinessProbe:
        httpGet:
          path: /health
          port: 8080
        failureThreshold: 5
        successThreshold: 1
        periodSeconds: 60
        timeoutSeconds: 60
      livenessProbe:
        httpGet:
          path: /health
          port: 8080
        failureThreshold: 5
        successThreshold: 1
        periodSeconds: 60
        timeoutSeconds: 60
      startupProbe:
        httpGet:
          path: /health
          port: 8080
        failureThreshold: 150
        successThreshold: 1
        periodSeconds: 6
        initialDelaySeconds: 60
        timeoutSeconds: 30
