# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_supported_model_format import V1beta1SupportedModelFormat


class TestV1beta1SupportedModelFormat(unittest.TestCase):
    """V1beta1SupportedModelFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1SupportedModelFormat:
        """Test V1beta1SupportedModelFormat
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1SupportedModelFormat`
        """
        model = V1beta1SupportedModelFormat()
        if include_optional:
            return V1beta1SupportedModelFormat(
                auto_select = True,
                model_architecture = '',
                model_format = ome.models.v1beta1/model_format.v1beta1.ModelFormat(
                    name = '', 
                    version = '', ),
                model_framework = ome.models.v1beta1/model_framework_spec.v1beta1.ModelFrameworkSpec(
                    name = '', 
                    version = '', ),
                model_type = '',
                name = '',
                priority = 56,
                quantization = '',
                version = ''
            )
        else:
            return V1beta1SupportedModelFormat(
                model_format = ome.models.v1beta1/model_format.v1beta1.ModelFormat(
                    name = '', 
                    version = '', ),
                model_framework = ome.models.v1beta1/model_framework_spec.v1beta1.ModelFrameworkSpec(
                    name = '', 
                    version = '', ),
        )
        """

    def testV1beta1SupportedModelFormat(self):
        """Test V1beta1SupportedModelFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
