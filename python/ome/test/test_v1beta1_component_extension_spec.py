# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_component_extension_spec import V1beta1ComponentExtensionSpec


class TestV1beta1ComponentExtensionSpec(unittest.TestCase):
    """V1beta1ComponentExtensionSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1ComponentExtensionSpec:
        """Test V1beta1ComponentExtensionSpec
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1ComponentExtensionSpec`
        """
        model = V1beta1ComponentExtensionSpec()
        if include_optional:
            return V1beta1ComponentExtensionSpec(
                annotations = {
                    'key' : ''
                    },
                canary_traffic_percent = 56,
                container_concurrency = 56,
                deployment_strategy = None,
                keda_config = ome.models.v1beta1/keda_config.v1beta1.KedaConfig(
                    custom_prom_query = '', 
                    enable_keda = True, 
                    prom_server_address = '', 
                    scaling_operator = '', 
                    scaling_threshold = '', ),
                labels = {
                    'key' : ''
                    },
                logger = ome.models.v1beta1/logger_spec.v1beta1.LoggerSpec(
                    mode = '', 
                    url = '', ),
                max_replicas = 56,
                min_replicas = 56,
                scale_metric = '',
                scale_target = 56,
                timeout_seconds = 56
            )
        else:
            return V1beta1ComponentExtensionSpec(
        )
        """

    def testV1beta1ComponentExtensionSpec(self):
        """Test V1beta1ComponentExtensionSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
