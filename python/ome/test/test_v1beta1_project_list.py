# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_project_list import V1beta1ProjectList


class TestV1beta1ProjectList(unittest.TestCase):
    """V1beta1ProjectList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1ProjectList:
        """Test V1beta1ProjectList
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1ProjectList`
        """
        model = V1beta1ProjectList()
        if include_optional:
            return V1beta1ProjectList(
                api_version = '',
                items = [
                    ome.models.v1beta1/project.v1beta1.Project(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/project_spec.v1beta1.ProjectSpec(
                            config = {
                                'key' : ''
                                }, 
                            description = '', 
                            name = '', 
                            organization_ref = ome.models.v1beta1/cross_reference.v1beta1.CrossReference(
                                name = '', 
                                namespace = '', ), ), 
                        status = ome.models.v1beta1/project_status.v1beta1.ProjectStatus(
                            conditions = [
                                None
                                ], 
                            creation_time = None, 
                            last_updated_time = None, 
                            project_id = '', ), )
                    ],
                kind = '',
                metadata = None
            )
        else:
            return V1beta1ProjectList(
                items = [
                    ome.models.v1beta1/project.v1beta1.Project(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/project_spec.v1beta1.ProjectSpec(
                            config = {
                                'key' : ''
                                }, 
                            description = '', 
                            name = '', 
                            organization_ref = ome.models.v1beta1/cross_reference.v1beta1.CrossReference(
                                name = '', 
                                namespace = '', ), ), 
                        status = ome.models.v1beta1/project_status.v1beta1.ProjectStatus(
                            conditions = [
                                None
                                ], 
                            creation_time = None, 
                            last_updated_time = None, 
                            project_id = '', ), )
                    ],
        )
        """

    def testV1beta1ProjectList(self):
        """Test V1beta1ProjectList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
