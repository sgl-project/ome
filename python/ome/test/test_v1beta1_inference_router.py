# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_inference_router import V1beta1InferenceRouter


class TestV1beta1InferenceRouter(unittest.TestCase):
    """V1beta1InferenceRouter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1InferenceRouter:
        """Test V1beta1InferenceRouter
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1InferenceRouter`
        """
        model = V1beta1InferenceRouter()
        if include_optional:
            return V1beta1InferenceRouter(
                router_type = '',
                steps = [
                    ome.models.v1beta1/inference_step.v1beta1.InferenceStep(
                        condition = '', 
                        data = '', 
                        dependency = '', 
                        name = '', 
                        node_name = '', 
                        service_name = '', 
                        service_url = '', 
                        weight = 56, )
                    ]
            )
        else:
            return V1beta1InferenceRouter(
                router_type = '',
        )
        """

    def testV1beta1InferenceRouter(self):
        """Test V1beta1InferenceRouter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
