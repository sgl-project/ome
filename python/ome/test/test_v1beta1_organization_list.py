# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_organization_list import V1beta1OrganizationList


class TestV1beta1OrganizationList(unittest.TestCase):
    """V1beta1OrganizationList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1OrganizationList:
        """Test V1beta1OrganizationList
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1OrganizationList`
        """
        model = V1beta1OrganizationList()
        if include_optional:
            return V1beta1OrganizationList(
                api_version = '',
                items = [
                    ome.models.v1beta1/organization.v1beta1.Organization(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/organization_spec.v1beta1.OrganizationSpec(
                            config = {
                                'key' : ''
                                }, 
                            disabled = True, 
                            organization_id = '', 
                            secret_ref = ome.models.v1beta1/secret_reference.v1beta1.SecretReference(
                                key = '', 
                                name = '', 
                                namespace = '', ), 
                            vendor = '', ), 
                        status = ome.models.v1beta1/organization_status.v1beta1.OrganizationStatus(
                            conditions = [
                                None
                                ], ), )
                    ],
                kind = '',
                metadata = None
            )
        else:
            return V1beta1OrganizationList(
                items = [
                    ome.models.v1beta1/organization.v1beta1.Organization(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/organization_spec.v1beta1.OrganizationSpec(
                            config = {
                                'key' : ''
                                }, 
                            disabled = True, 
                            organization_id = '', 
                            secret_ref = ome.models.v1beta1/secret_reference.v1beta1.SecretReference(
                                key = '', 
                                name = '', 
                                namespace = '', ), 
                            vendor = '', ), 
                        status = ome.models.v1beta1/organization_status.v1beta1.OrganizationStatus(
                            conditions = [
                                None
                                ], ), )
                    ],
        )
        """

    def testV1beta1OrganizationList(self):
        """Test V1beta1OrganizationList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
