# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_inference_service_status import V1beta1InferenceServiceStatus


class TestV1beta1InferenceServiceStatus(unittest.TestCase):
    """V1beta1InferenceServiceStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1InferenceServiceStatus:
        """Test V1beta1InferenceServiceStatus
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1InferenceServiceStatus`
        """
        model = V1beta1InferenceServiceStatus()
        if include_optional:
            return V1beta1InferenceServiceStatus(
                address = None,
                annotations = {
                    'key' : ''
                    },
                components = {
                    'key' : ome.models.v1beta1/component_status_spec.v1beta1.ComponentStatusSpec(
                        address = None, 
                        latest_created_revision = '', 
                        latest_ready_revision = '', 
                        latest_rolledout_revision = '', 
                        previous_rolledout_revision = '', 
                        rest_url = None, 
                        traffic = [
                            None
                            ], 
                        url = None, )
                    },
                conditions = [
                    None
                    ],
                model_status = ome.models.v1beta1/model_status.v1beta1.ModelStatus(
                    last_failure_info = ome.models.v1beta1/failure_info.v1beta1.FailureInfo(
                        exit_code = 56, 
                        location = '', 
                        message = '', 
                        model_revision_name = '', 
                        reason = '', 
                        time = None, ), 
                    model_copies = ome.models.v1beta1/model_copies.v1beta1.ModelCopies(
                        failed_copies = 56, 
                        total_copies = 56, ), 
                    model_revision_states = ome.models.v1beta1/model_revision_states.v1beta1.ModelRevisionStates(
                        active_model_state = '', 
                        target_model_state = '', ), 
                    transition_status = '', ),
                observed_generation = 56,
                url = None
            )
        else:
            return V1beta1InferenceServiceStatus(
        )
        """

    def testV1beta1InferenceServiceStatus(self):
        """Test V1beta1InferenceServiceStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
