# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_inference_service_list import V1beta1InferenceServiceList


class TestV1beta1InferenceServiceList(unittest.TestCase):
    """V1beta1InferenceServiceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1InferenceServiceList:
        """Test V1beta1InferenceServiceList
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1InferenceServiceList`
        """
        model = V1beta1InferenceServiceList()
        if include_optional:
            return V1beta1InferenceServiceList(
                api_version = '',
                items = [
                    ome.models.v1beta1/inference_service.v1beta1.InferenceService(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/inference_service_spec.v1beta1.InferenceServiceSpec(
                            compartment_id = '', 
                            keda_config = ome.models.v1beta1/keda_config.v1beta1.KedaConfig(
                                custom_prom_query = '', 
                                enable_keda = True, 
                                prom_server_address = '', 
                                scaling_operator = '', 
                                scaling_threshold = '', ), 
                            predictor = ome.models.v1beta1/predictor_spec.v1beta1.PredictorSpec(
                                active_deadline_seconds = 56, 
                                affinity = None, 
                                annotations = {
                                    'key' : ''
                                    }, 
                                automount_service_account_token = True, 
                                canary_traffic_percent = 56, 
                                container_concurrency = 56, 
                                containers = [
                                    None
                                    ], 
                                deployment_strategy = None, 
                                dns_config = None, 
                                dns_policy = '', 
                                enable_service_links = True, 
                                ephemeral_containers = [
                                    None
                                    ], 
                                host_aliases = [
                                    None
                                    ], 
                                host_ipc = True, 
                                host_network = True, 
                                host_pid = True, 
                                host_users = True, 
                                hostname = '', 
                                image_pull_secrets = [
                                    None
                                    ], 
                                init_containers = [
                                    None
                                    ], 
                                labels = {
                                    'key' : ''
                                    }, 
                                logger = ome.models.v1beta1/logger_spec.v1beta1.LoggerSpec(
                                    mode = '', 
                                    url = '', ), 
                                max_replicas = 56, 
                                min_replicas = 56, 
                                model = ome.models.v1beta1/model_spec.v1beta1.ModelSpec(
                                    args = [
                                        ''
                                        ], 
                                    base_model = '', 
                                    command = [
                                        ''
                                        ], 
                                    env = [
                                        None
                                        ], 
                                    env_from = [
                                        None
                                        ], 
                                    fine_tuned_weights = [
                                        ''
                                        ], 
                                    image = '', 
                                    image_pull_policy = '', 
                                    lifecycle = None, 
                                    liveness_probe = None, 
                                    name = '', 
                                    ports = [
                                        None
                                        ], 
                                    protocol_version = '', 
                                    readiness_probe = None, 
                                    resize_policy = [
                                        None
                                        ], 
                                    resources = None, 
                                    restart_policy = '', 
                                    runtime = '', 
                                    runtime_version = '', 
                                    security_context = None, 
                                    startup_probe = None, 
                                    stdin = True, 
                                    stdin_once = True, 
                                    storage_uri = '', 
                                    termination_message_path = '', 
                                    termination_message_policy = '', 
                                    tty = True, 
                                    volume_devices = [
                                        None
                                        ], 
                                    volume_mounts = [
                                        None
                                        ], 
                                    working_dir = '', ), 
                                node_name = '', 
                                node_selector = {
                                    'key' : ''
                                    }, 
                                os = None, 
                                overhead = {
                                    'key' : None
                                    }, 
                                preemption_policy = '', 
                                priority = 56, 
                                priority_class_name = '', 
                                readiness_gates = [
                                    None
                                    ], 
                                resource_claims = [
                                    None
                                    ], 
                                restart_policy = '', 
                                runtime_class_name = '', 
                                scale_metric = '', 
                                scale_target = 56, 
                                scheduler_name = '', 
                                scheduling_gates = [
                                    None
                                    ], 
                                security_context = None, 
                                service_account = '', 
                                service_account_name = '', 
                                set_hostname_as_fqdn = True, 
                                share_process_namespace = True, 
                                subdomain = '', 
                                termination_grace_period_seconds = 56, 
                                timeout_seconds = 56, 
                                tolerations = [
                                    None
                                    ], 
                                topology_spread_constraints = [
                                    None
                                    ], 
                                volumes = [
                                    None
                                    ], 
                                worker_spec = ome.models.v1beta1/worker_spec.v1beta1.WorkerSpec(
                                    active_deadline_seconds = 56, 
                                    affinity = None, 
                                    automount_service_account_token = True, 
                                    dns_config = None, 
                                    dns_policy = '', 
                                    enable_service_links = True, 
                                    host_ipc = True, 
                                    host_network = True, 
                                    host_pid = True, 
                                    host_users = True, 
                                    hostname = '', 
                                    node_name = '', 
                                    os = None, 
                                    preemption_policy = '', 
                                    priority = 56, 
                                    priority_class_name = '', 
                                    restart_policy = '', 
                                    runtime_class_name = '', 
                                    scheduler_name = '', 
                                    security_context = None, 
                                    service_account = '', 
                                    service_account_name = '', 
                                    set_hostname_as_fqdn = True, 
                                    share_process_namespace = True, 
                                    size = 56, 
                                    subdomain = '', 
                                    termination_grace_period_seconds = 56, ), ), ), 
                        status = ome.models.v1beta1/inference_service_status.v1beta1.InferenceServiceStatus(
                            address = None, 
                            components = {
                                'key' : ome.models.v1beta1/component_status_spec.v1beta1.ComponentStatusSpec(
                                    address = None, 
                                    latest_created_revision = '', 
                                    latest_ready_revision = '', 
                                    latest_rolledout_revision = '', 
                                    previous_rolledout_revision = '', 
                                    rest_url = None, 
                                    traffic = [
                                        None
                                        ], 
                                    url = None, )
                                }, 
                            conditions = [
                                None
                                ], 
                            model_status = ome.models.v1beta1/model_status.v1beta1.ModelStatus(
                                last_failure_info = ome.models.v1beta1/failure_info.v1beta1.FailureInfo(
                                    exit_code = 56, 
                                    location = '', 
                                    message = '', 
                                    model_revision_name = '', 
                                    reason = '', 
                                    time = None, ), 
                                model_copies = ome.models.v1beta1/model_copies.v1beta1.ModelCopies(
                                    failed_copies = 56, 
                                    total_copies = 56, ), 
                                model_revision_states = ome.models.v1beta1/model_revision_states.v1beta1.ModelRevisionStates(
                                    active_model_state = '', 
                                    target_model_state = '', ), 
                                transition_status = '', ), 
                            observed_generation = 56, 
                            url = None, ), )
                    ],
                kind = '',
                metadata = None
            )
        else:
            return V1beta1InferenceServiceList(
                items = [
                    ome.models.v1beta1/inference_service.v1beta1.InferenceService(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/inference_service_spec.v1beta1.InferenceServiceSpec(
                            compartment_id = '', 
                            keda_config = ome.models.v1beta1/keda_config.v1beta1.KedaConfig(
                                custom_prom_query = '', 
                                enable_keda = True, 
                                prom_server_address = '', 
                                scaling_operator = '', 
                                scaling_threshold = '', ), 
                            predictor = ome.models.v1beta1/predictor_spec.v1beta1.PredictorSpec(
                                active_deadline_seconds = 56, 
                                affinity = None, 
                                annotations = {
                                    'key' : ''
                                    }, 
                                automount_service_account_token = True, 
                                canary_traffic_percent = 56, 
                                container_concurrency = 56, 
                                containers = [
                                    None
                                    ], 
                                deployment_strategy = None, 
                                dns_config = None, 
                                dns_policy = '', 
                                enable_service_links = True, 
                                ephemeral_containers = [
                                    None
                                    ], 
                                host_aliases = [
                                    None
                                    ], 
                                host_ipc = True, 
                                host_network = True, 
                                host_pid = True, 
                                host_users = True, 
                                hostname = '', 
                                image_pull_secrets = [
                                    None
                                    ], 
                                init_containers = [
                                    None
                                    ], 
                                labels = {
                                    'key' : ''
                                    }, 
                                logger = ome.models.v1beta1/logger_spec.v1beta1.LoggerSpec(
                                    mode = '', 
                                    url = '', ), 
                                max_replicas = 56, 
                                min_replicas = 56, 
                                model = ome.models.v1beta1/model_spec.v1beta1.ModelSpec(
                                    args = [
                                        ''
                                        ], 
                                    base_model = '', 
                                    command = [
                                        ''
                                        ], 
                                    env = [
                                        None
                                        ], 
                                    env_from = [
                                        None
                                        ], 
                                    fine_tuned_weights = [
                                        ''
                                        ], 
                                    image = '', 
                                    image_pull_policy = '', 
                                    lifecycle = None, 
                                    liveness_probe = None, 
                                    name = '', 
                                    ports = [
                                        None
                                        ], 
                                    protocol_version = '', 
                                    readiness_probe = None, 
                                    resize_policy = [
                                        None
                                        ], 
                                    resources = None, 
                                    restart_policy = '', 
                                    runtime = '', 
                                    runtime_version = '', 
                                    security_context = None, 
                                    startup_probe = None, 
                                    stdin = True, 
                                    stdin_once = True, 
                                    storage_uri = '', 
                                    termination_message_path = '', 
                                    termination_message_policy = '', 
                                    tty = True, 
                                    volume_devices = [
                                        None
                                        ], 
                                    volume_mounts = [
                                        None
                                        ], 
                                    working_dir = '', ), 
                                node_name = '', 
                                node_selector = {
                                    'key' : ''
                                    }, 
                                os = None, 
                                overhead = {
                                    'key' : None
                                    }, 
                                preemption_policy = '', 
                                priority = 56, 
                                priority_class_name = '', 
                                readiness_gates = [
                                    None
                                    ], 
                                resource_claims = [
                                    None
                                    ], 
                                restart_policy = '', 
                                runtime_class_name = '', 
                                scale_metric = '', 
                                scale_target = 56, 
                                scheduler_name = '', 
                                scheduling_gates = [
                                    None
                                    ], 
                                security_context = None, 
                                service_account = '', 
                                service_account_name = '', 
                                set_hostname_as_fqdn = True, 
                                share_process_namespace = True, 
                                subdomain = '', 
                                termination_grace_period_seconds = 56, 
                                timeout_seconds = 56, 
                                tolerations = [
                                    None
                                    ], 
                                topology_spread_constraints = [
                                    None
                                    ], 
                                volumes = [
                                    None
                                    ], 
                                worker_spec = ome.models.v1beta1/worker_spec.v1beta1.WorkerSpec(
                                    active_deadline_seconds = 56, 
                                    affinity = None, 
                                    automount_service_account_token = True, 
                                    dns_config = None, 
                                    dns_policy = '', 
                                    enable_service_links = True, 
                                    host_ipc = True, 
                                    host_network = True, 
                                    host_pid = True, 
                                    host_users = True, 
                                    hostname = '', 
                                    node_name = '', 
                                    os = None, 
                                    preemption_policy = '', 
                                    priority = 56, 
                                    priority_class_name = '', 
                                    restart_policy = '', 
                                    runtime_class_name = '', 
                                    scheduler_name = '', 
                                    security_context = None, 
                                    service_account = '', 
                                    service_account_name = '', 
                                    set_hostname_as_fqdn = True, 
                                    share_process_namespace = True, 
                                    size = 56, 
                                    subdomain = '', 
                                    termination_grace_period_seconds = 56, ), ), ), 
                        status = ome.models.v1beta1/inference_service_status.v1beta1.InferenceServiceStatus(
                            address = None, 
                            components = {
                                'key' : ome.models.v1beta1/component_status_spec.v1beta1.ComponentStatusSpec(
                                    address = None, 
                                    latest_created_revision = '', 
                                    latest_ready_revision = '', 
                                    latest_rolledout_revision = '', 
                                    previous_rolledout_revision = '', 
                                    rest_url = None, 
                                    traffic = [
                                        None
                                        ], 
                                    url = None, )
                                }, 
                            conditions = [
                                None
                                ], 
                            model_status = ome.models.v1beta1/model_status.v1beta1.ModelStatus(
                                last_failure_info = ome.models.v1beta1/failure_info.v1beta1.FailureInfo(
                                    exit_code = 56, 
                                    location = '', 
                                    message = '', 
                                    model_revision_name = '', 
                                    reason = '', 
                                    time = None, ), 
                                model_copies = ome.models.v1beta1/model_copies.v1beta1.ModelCopies(
                                    failed_copies = 56, 
                                    total_copies = 56, ), 
                                model_revision_states = ome.models.v1beta1/model_revision_states.v1beta1.ModelRevisionStates(
                                    active_model_state = '', 
                                    target_model_state = '', ), 
                                transition_status = '', ), 
                            observed_generation = 56, 
                            url = None, ), )
                    ],
        )
        """

    def testV1beta1InferenceServiceList(self):
        """Test V1beta1InferenceServiceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
