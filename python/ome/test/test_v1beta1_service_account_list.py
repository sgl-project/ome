# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_service_account_list import V1beta1ServiceAccountList


class TestV1beta1ServiceAccountList(unittest.TestCase):
    """V1beta1ServiceAccountList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1ServiceAccountList:
        """Test V1beta1ServiceAccountList
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1ServiceAccountList`
        """
        model = V1beta1ServiceAccountList()
        if include_optional:
            return V1beta1ServiceAccountList(
                api_version = '',
                items = [
                    ome.models.v1beta1/service_account.v1beta1.ServiceAccount(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/service_account_spec.v1beta1.ServiceAccountSpec(
                            config = {
                                'key' : ''
                                }, 
                            name = '', 
                            permissions = [
                                ''
                                ], 
                            project_ref = ome.models.v1beta1/cross_reference.v1beta1.CrossReference(
                                name = '', 
                                namespace = '', ), 
                            role = '', ), 
                        status = ome.models.v1beta1/service_account_status.v1beta1.ServiceAccountStatus(
                            api_key = ome.models.v1beta1/api_key_spec.v1beta1.APIKeySpec(
                                api_key_id = '', 
                                api_key_secret_ref = ome.models.v1beta1/secret_reference.v1beta1.SecretReference(
                                    key = '', 
                                    name = '', 
                                    namespace = '', ), 
                                name = '', ), 
                            conditions = [
                                None
                                ], 
                            creation_time = None, 
                            service_account_id = '', ), )
                    ],
                kind = '',
                metadata = None
            )
        else:
            return V1beta1ServiceAccountList(
                items = [
                    ome.models.v1beta1/service_account.v1beta1.ServiceAccount(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = ome.models.v1beta1/service_account_spec.v1beta1.ServiceAccountSpec(
                            config = {
                                'key' : ''
                                }, 
                            name = '', 
                            permissions = [
                                ''
                                ], 
                            project_ref = ome.models.v1beta1/cross_reference.v1beta1.CrossReference(
                                name = '', 
                                namespace = '', ), 
                            role = '', ), 
                        status = ome.models.v1beta1/service_account_status.v1beta1.ServiceAccountStatus(
                            api_key = ome.models.v1beta1/api_key_spec.v1beta1.APIKeySpec(
                                api_key_id = '', 
                                api_key_secret_ref = ome.models.v1beta1/secret_reference.v1beta1.SecretReference(
                                    key = '', 
                                    name = '', 
                                    namespace = '', ), 
                                name = '', ), 
                            conditions = [
                                None
                                ], 
                            creation_time = None, 
                            service_account_id = '', ), )
                    ],
        )
        """

    def testV1beta1ServiceAccountList(self):
        """Test V1beta1ServiceAccountList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
