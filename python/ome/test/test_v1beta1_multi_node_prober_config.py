# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_multi_node_prober_config import V1beta1MultiNodeProberConfig


class TestV1beta1MultiNodeProberConfig(unittest.TestCase):
    """V1beta1MultiNodeProberConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1MultiNodeProberConfig:
        """Test V1beta1MultiNodeProberConfig
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1MultiNodeProberConfig`
        """
        model = V1beta1MultiNodeProberConfig()
        if include_optional:
            return V1beta1MultiNodeProberConfig(
                cpu_limit = '',
                cpu_request = '',
                image = '',
                memory_limit = '',
                memory_request = '',
                startup_failure_threshold = 56,
                startup_initial_delay_seconds = 56,
                startup_period_seconds = 56,
                startup_timeout_seconds = 56,
                unavailable_threshold_seconds = 56
            )
        else:
            return V1beta1MultiNodeProberConfig(
                cpu_limit = '',
                cpu_request = '',
                image = '',
                memory_limit = '',
                memory_request = '',
                startup_failure_threshold = 56,
                startup_initial_delay_seconds = 56,
                startup_period_seconds = 56,
                startup_timeout_seconds = 56,
                unavailable_threshold_seconds = 56,
        )
        """

    def testV1beta1MultiNodeProberConfig(self):
        """Test V1beta1MultiNodeProberConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
