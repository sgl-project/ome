# coding: utf-8

"""
OME

Python SDK for OME

The version of the OpenAPI document: v0.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ome.models.v1beta1_capacity_reservation import V1beta1CapacityReservation


class TestV1beta1CapacityReservation(unittest.TestCase):
    """V1beta1CapacityReservation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1beta1CapacityReservation:
        """Test V1beta1CapacityReservation
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1beta1CapacityReservation`
        """
        model = V1beta1CapacityReservation()
        if include_optional:
            return V1beta1CapacityReservation(
                api_version = '',
                kind = '',
                metadata = None,
                spec = ome.models.v1beta1/capacity_reservation_spec.v1beta1.CapacityReservationSpec(
                    allow_borrowing = True, 
                    cohort = '', 
                    compartment_id = '', 
                    preemption_rule = None, 
                    priority_class_name = '', 
                    resource_groups = [
                        None
                        ], ),
                status = ome.models.v1beta1/capacity_reservation_status.v1beta1.CapacityReservationStatus(
                    allocatable = [
                        None
                        ], 
                    association_usages = [
                        ome.models.v1beta1/association_usage.v1beta1.AssociationUsage(
                            name = '', 
                            usage = [
                                None
                                ], )
                        ], 
                    capacity = [
                        None
                        ], 
                    capacity_reservation_lifecycle_state = '', 
                    conditions = [
                        ome.models.v1beta1/capacity_reservation_condition.v1beta1.CapacityReservationCondition(
                            last_transition_time = None, 
                            message = '', 
                            reason = '', 
                            status = '', 
                            type = '', )
                        ], 
                    lifecycle_detail = '', )
            )
        else:
            return V1beta1CapacityReservation(
        )
        """

    def testV1beta1CapacityReservation(self):
        """Test V1beta1CapacityReservation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
